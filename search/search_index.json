{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Living Open Source Africa This is the wiki for Living Open Source Africa Alert The site is still under construction!!! Please help us improve the wiki by contributing. TODO List Write contribution guide","title":"Welcome!"},{"location":"#welcome-to-living-open-source-africa","text":"This is the wiki for Living Open Source Africa Alert The site is still under construction!!! Please help us improve the wiki by contributing.","title":"Welcome to Living Open Source Africa"},{"location":"#todo-list","text":"Write contribution guide","title":"TODO List"},{"location":"contributing/","text":"We are glad that you have decided to contribute to LOS Africa Wiki . Warning This is just an outline Fork the repo on github Clone the repo on local machine check out a branch Work on the branch Commit your works push your work github create a pull request section: setup enviroment installing python setting up python virtual enviroment install mkdocs setting up vscode section: ssh keypair section : Writing Write new document Metadata","title":"Contrbuting to LOS wiki"},{"location":"LFCS%20Exam/lfcs-exam/","text":"Linux Foundation Certified System Administrator (LFCS) Official Website Duration - 2 hours Cost - 375 USD (Price excludes VAT) The LFCS in an online proctored exam that lasts two hours. The exam can either be taken on Ubuntu or Centos machine. The exam asks you to perform tasks on the machine. Any changes that are made must survive a reboot. Passing the exam demonstrates you are capable of configuring and managing Linux machines. You have to schedule the exam atlas 24 hours before hand. One free retake in case of no pass. If you're old school like me here is a checklist of topics you should be familiar before you sit down for the exam Checklist Resources Books As far as I know there aren't any books written for LFCS exam. I will link books for the RHCSA exam as most of the contents are similar Beginner If you are a beginner check out Red Hat's Training and Certification student workbook (RH124 and RH134). Intermediate Asghar Ghori, RHCSA Red Hat Enterprise Linux 8: Training and Exam Preparation Guide (EX200) Amazon Michael Jang and Alessandro Orsaria, RHCSA/RHCE Red Hat Enterprise Linux Certification Study Guide (7th Edition ) Amazon Course If you are a visual learner I recommend the following video courses Linux Foundation Certified System Administrator (LFCS) Complete Video Course by Sander van Vugt on Pearson . Linux Foundation Certified System Administrator (LFCS) by Andrew Mallett on Pluralsight . This is the video course to watch if you want to go beyond the basics.","title":"About the Exam"},{"location":"LFCS%20Exam/lfcs-exam/#linux-foundation-certified-system-administrator-lfcs","text":"Official Website Duration - 2 hours Cost - 375 USD (Price excludes VAT) The LFCS in an online proctored exam that lasts two hours. The exam can either be taken on Ubuntu or Centos machine. The exam asks you to perform tasks on the machine. Any changes that are made must survive a reboot. Passing the exam demonstrates you are capable of configuring and managing Linux machines. You have to schedule the exam atlas 24 hours before hand. One free retake in case of no pass. If you're old school like me here is a checklist of topics you should be familiar before you sit down for the exam Checklist","title":"Linux Foundation Certified System Administrator (LFCS)"},{"location":"LFCS%20Exam/lfcs-exam/#resources","text":"","title":"Resources"},{"location":"LFCS%20Exam/lfcs-exam/#books","text":"As far as I know there aren't any books written for LFCS exam. I will link books for the RHCSA exam as most of the contents are similar","title":"Books"},{"location":"LFCS%20Exam/lfcs-exam/#course","text":"If you are a visual learner I recommend the following video courses Linux Foundation Certified System Administrator (LFCS) Complete Video Course by Sander van Vugt on Pearson . Linux Foundation Certified System Administrator (LFCS) by Andrew Mallett on Pluralsight . This is the video course to watch if you want to go beyond the basics.","title":"Course"},{"location":"LFCS%20Exam/tipstricks/","text":"Terminal Tricks cd - move(return) back to previous directory Ctrl + L clear screen Moving around Ctrl + A to jump to the beginning of a line Ctrl + E to jump to the end of the line Ctrl + U remove everything on the left-hand side of the cursor Ctrl + K remove everything on the right-hand side of the cursor Ctrl + Left or Ctrl + Right Vim tricks Note If you are new to vim run vimtutor to get a crash course on vim. : set nu or : set number to show line number LINE + Shift + g or : LINE to jump to LINE $ to move to end of line g + g to move to the end of a file Shift + g to move to the start of a file D + G remove all lines Useful Commands rpmquery to check if a package is installed. $ rpmquery [ package ] Alternatively you can use yum list to find out if a package is installed. The @ symbol before the repository name indicates if the package is installed. $ sudo yum list | autofs libsss_autofs.x86_64 2.4.0-9.el8 @anaconda autofs.x86_64 1:5.1.4-48.el8 BaseOS nfsstat show currently nfs mounted mounts $ nfsstat --mounts Snippets Disabling all enabled repositories. $ sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/* $ yum clean all Before setting up local repositories it is a good idea to disable default repo's. Setting password from STDIN $ echo \"password\" | passwd $USER --stdin Input Redirection. $ cat > mongodb_cgroup_memory.te <<EOF module mongodb_cgroup_memory 1.0; require { type cgroup_t; type mongod_t; class dir search; class file { getattr open read }; } # ============= mongod_t ============== allow mongod_t cgroup_t:dir search; allow mongod_t cgroup_t:file { getattr open read }; EOF Setting up your lab Here are some tips to consider when setting up your lab environment TIP 1 : download the full ISO. TIP 2 : disable k-dump during installation TIP 3 : setup a local repository for faster package install Setting up local repository Create fstab entry for the ISO. Assumed the ISO is mounted on /dev/sr0 sudo mkdir /iso-data sudo echo \"/dev/sr0 /iso-data iso9660 defaults 0 0\" >> /etc/fstab Set a local repo cat > /etc/yum.repos.d/local.repo <<EOF [baseos] name=local baseos baseurl=file:///iso-data/BaseOS enabled=1 gpgcheck=0 [appstream] name=local appstream baseurl=file:///iso-data/AppStream enabled=1 gpgcheck=0 EOF // more update coming to this section It's worth-while to learn tmux .","title":"Tips and Tricks"},{"location":"LFCS%20Exam/tipstricks/#terminal-tricks","text":"cd - move(return) back to previous directory Ctrl + L clear screen","title":"Terminal Tricks"},{"location":"LFCS%20Exam/tipstricks/#moving-around","text":"Ctrl + A to jump to the beginning of a line Ctrl + E to jump to the end of the line Ctrl + U remove everything on the left-hand side of the cursor Ctrl + K remove everything on the right-hand side of the cursor Ctrl + Left or Ctrl + Right","title":"Moving around"},{"location":"LFCS%20Exam/tipstricks/#vim-tricks","text":"Note If you are new to vim run vimtutor to get a crash course on vim. : set nu or : set number to show line number LINE + Shift + g or : LINE to jump to LINE $ to move to end of line g + g to move to the end of a file Shift + g to move to the start of a file D + G remove all lines","title":"Vim tricks"},{"location":"LFCS%20Exam/tipstricks/#useful-commands","text":"rpmquery to check if a package is installed. $ rpmquery [ package ] Alternatively you can use yum list to find out if a package is installed. The @ symbol before the repository name indicates if the package is installed. $ sudo yum list | autofs libsss_autofs.x86_64 2.4.0-9.el8 @anaconda autofs.x86_64 1:5.1.4-48.el8 BaseOS nfsstat show currently nfs mounted mounts $ nfsstat --mounts","title":"Useful Commands"},{"location":"LFCS%20Exam/tipstricks/#snippets","text":"Disabling all enabled repositories. $ sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/* $ yum clean all Before setting up local repositories it is a good idea to disable default repo's. Setting password from STDIN $ echo \"password\" | passwd $USER --stdin Input Redirection. $ cat > mongodb_cgroup_memory.te <<EOF module mongodb_cgroup_memory 1.0; require { type cgroup_t; type mongod_t; class dir search; class file { getattr open read }; } # ============= mongod_t ============== allow mongod_t cgroup_t:dir search; allow mongod_t cgroup_t:file { getattr open read }; EOF","title":"Snippets"},{"location":"LFCS%20Exam/tipstricks/#setting-up-your-lab","text":"Here are some tips to consider when setting up your lab environment TIP 1 : download the full ISO. TIP 2 : disable k-dump during installation TIP 3 : setup a local repository for faster package install","title":"Setting up your lab"},{"location":"LFCS%20Exam/tipstricks/#setting-up-local-repository","text":"Create fstab entry for the ISO. Assumed the ISO is mounted on /dev/sr0 sudo mkdir /iso-data sudo echo \"/dev/sr0 /iso-data iso9660 defaults 0 0\" >> /etc/fstab Set a local repo cat > /etc/yum.repos.d/local.repo <<EOF [baseos] name=local baseos baseurl=file:///iso-data/BaseOS enabled=1 gpgcheck=0 [appstream] name=local appstream baseurl=file:///iso-data/AppStream enabled=1 gpgcheck=0 EOF // more update coming to this section It's worth-while to learn tmux .","title":"Setting up local repository"},{"location":"LFCS%20Exam/Essential%20Commands/fileperm/","text":"Warning Topic not complete. 421 rwx Effect rwx on Files and Directories PERMISSION EFFECT ON FILES EFFECT ON DIRECTORIES r Contents of the file can be read. Contents of the directory (the file names) can be listed. w Contents of the file can be changed. Any file in the directory can be created or deleted. x Files can be executed as commands. Contents of the directory can be accessed. (You can change into the directory, read information about its files, and access its files if the files' permissions allow it.) # file: test-dir-perm.sh # Create folders with diffrent combination # for user perm #!/bin/bash mkdir test-dir-perm if [[ \" $? \" ! = 0 ]] ; then echo \"Folder already exists\" exit 0 fi cd test-dir-perm for uperm in { 0 ..7 } ; do # mkdir -m ${uperm}55 dir-${uperm}55 mkdir dir- ${ uperm } 55 # create sample file echo \"Hello\" > dir- ${ uperm } 55 /file.txt chmod ${ uperm } 55 dir- ${ uperm } 55 done DIRECTORY PERM cd ls touch cat rm ./dir-055 . no no no no no ./dir-155 --X yes no no yes no ./dir-255 -W- no no no no no ./dir-355 -XW yes no yes yes yes ./dir-455 R-- no yes* no no* no ./dir-555 R-X yes yes no yes no ./dir-655 RW- no yes* no no no ./dir-755 RWX yes yes yes yes yes Unix File Permissions by @Perderabo Please take the time and try to understand it. Cite On a directory, that x is officially called search permission . You need x to use a directory in a pathname. So if you try \"cat /etc/passwd\", you will need x on / and /etc . You also need x to cd into a directory. Suppose you have read but not search (x) permission on a directory. What can you do? Not much. You can use ls to view the file names. Even \"ls -l\" will not work. Read access without search permission is not very useful. Still that is better than having only write permission on a directory... that is completely useless . I have not seen any other documentation that states this explicitly, so let me repeat it: write but no execute permission on a directory grants nothing at all.Suppose you have search (x) permission but no read permission on a directory. Now you can open files in the directory if you happen to know the file's name. You can cd into the directory. And that is it. You cannot even create a new file. Adding write permission will allow you to create files. And you can then delete files if you happen to know their name. What that means is that with read permission you are able to only view filenames with execute permission you are able to open files within the directory , if you happen to know the file name and have sufficient permission on the file. write permission alone is useless.( pointless to have it) Effects of Special Permissions on Files and Directories suid = 4 sgid = 2 sticky-bit = 1 SPECIAL PERMISSION EFFECT ON FILES EFFECT ON DIRECTORIES u+s (suid) File executes as the user that owns the file, not the user that ran the file. No effect. g+s (sgid) File executes as the group that owns the file. Files newly created in the directory have their group owner set to match the group owner of the directory. o+t (sticky) No effect. Users with write access to the directory can only remove files that they own; they cannot remove or force saves to files owned by other users. File Access control list (FACL) a second level of discretionary access control Usually . symbol at the end of the permission block indicates ACL is supported We use setfacl set file access control and getfacl list file access control skipped Default ACL's & Removing ACl entries :: I think I have to mention Redhat or something. I copied the tables from their book.","title":"List, set, and change standard file permissions"},{"location":"LFCS%20Exam/Essential%20Commands/fileperm/#effect-rwx-on-files-and-directories","text":"PERMISSION EFFECT ON FILES EFFECT ON DIRECTORIES r Contents of the file can be read. Contents of the directory (the file names) can be listed. w Contents of the file can be changed. Any file in the directory can be created or deleted. x Files can be executed as commands. Contents of the directory can be accessed. (You can change into the directory, read information about its files, and access its files if the files' permissions allow it.) # file: test-dir-perm.sh # Create folders with diffrent combination # for user perm #!/bin/bash mkdir test-dir-perm if [[ \" $? \" ! = 0 ]] ; then echo \"Folder already exists\" exit 0 fi cd test-dir-perm for uperm in { 0 ..7 } ; do # mkdir -m ${uperm}55 dir-${uperm}55 mkdir dir- ${ uperm } 55 # create sample file echo \"Hello\" > dir- ${ uperm } 55 /file.txt chmod ${ uperm } 55 dir- ${ uperm } 55 done DIRECTORY PERM cd ls touch cat rm ./dir-055 . no no no no no ./dir-155 --X yes no no yes no ./dir-255 -W- no no no no no ./dir-355 -XW yes no yes yes yes ./dir-455 R-- no yes* no no* no ./dir-555 R-X yes yes no yes no ./dir-655 RW- no yes* no no no ./dir-755 RWX yes yes yes yes yes Unix File Permissions by @Perderabo Please take the time and try to understand it. Cite On a directory, that x is officially called search permission . You need x to use a directory in a pathname. So if you try \"cat /etc/passwd\", you will need x on / and /etc . You also need x to cd into a directory. Suppose you have read but not search (x) permission on a directory. What can you do? Not much. You can use ls to view the file names. Even \"ls -l\" will not work. Read access without search permission is not very useful. Still that is better than having only write permission on a directory... that is completely useless . I have not seen any other documentation that states this explicitly, so let me repeat it: write but no execute permission on a directory grants nothing at all.Suppose you have search (x) permission but no read permission on a directory. Now you can open files in the directory if you happen to know the file's name. You can cd into the directory. And that is it. You cannot even create a new file. Adding write permission will allow you to create files. And you can then delete files if you happen to know their name. What that means is that with read permission you are able to only view filenames with execute permission you are able to open files within the directory , if you happen to know the file name and have sufficient permission on the file. write permission alone is useless.( pointless to have it)","title":"Effect rwx on Files and Directories"},{"location":"LFCS%20Exam/Essential%20Commands/fileperm/#effects-of-special-permissions-on-files-and-directories","text":"suid = 4 sgid = 2 sticky-bit = 1 SPECIAL PERMISSION EFFECT ON FILES EFFECT ON DIRECTORIES u+s (suid) File executes as the user that owns the file, not the user that ran the file. No effect. g+s (sgid) File executes as the group that owns the file. Files newly created in the directory have their group owner set to match the group owner of the directory. o+t (sticky) No effect. Users with write access to the directory can only remove files that they own; they cannot remove or force saves to files owned by other users.","title":"Effects of Special Permissions on Files and Directories"},{"location":"LFCS%20Exam/Essential%20Commands/fileperm/#file-access-control-list-facl","text":"a second level of discretionary access control Usually . symbol at the end of the permission block indicates ACL is supported We use setfacl set file access control and getfacl list file access control skipped Default ACL's & Removing ACl entries :: I think I have to mention Redhat or something. I copied the tables from their book.","title":"File Access control list (FACL)"},{"location":"LFCS%20Exam/Essential%20Commands/find/","text":"Warning Topic not complete. 1 = w 2 = x 3 = wx 4 = r 5 = rx 6 = rw 7 = rwx Find file based on Permission find . -perm 764 will match a file with the exact permission find . -perm -764 will match any files with atleast rwx for the user, rw for the group and r for the world. find . -perm /764 will match a file which contains any of rwx for user , rw for group , r for world. Read More Examples # file: find-perm.sh # Create files with diffrent combination # of ugo permission #!/bin/bash mkdir test-dir-perm if [[ \" $? \" ! = 0 ]] ; then echo \"Folder already exists\" exit 0 fi for uperm in { 0 ..7 } ; do for gperm in { 0 ..7 } ; do for operm in { 0 ..7 } ; do touch file $uperm$gperm$operm ; chmod $uperm$gperm$operm file $uperm$gperm$operm ; done done done find . -perm 646 This will do an exact match. So will only ouput the file with permission 646. i.e file646 . find . -perm -646 # , 'rw' for user find . -perm -u+rw,g+w,o+rw The least required permission for u is 6 so it will try to find files with = 6 or 7 for u for g = 4 5 6 7 for o = 6 7 For example it will match file656 , file647 , file767 find . -perm /600 find . -perm /646 Need Further reading","title":"Search for files"},{"location":"LFCS%20Exam/Essential%20Commands/find/#find-file-based-on-permission","text":"find . -perm 764 will match a file with the exact permission find . -perm -764 will match any files with atleast rwx for the user, rw for the group and r for the world. find . -perm /764 will match a file which contains any of rwx for user , rw for group , r for world. Read More","title":"Find file based on Permission"},{"location":"LFCS%20Exam/Essential%20Commands/find/#examples","text":"# file: find-perm.sh # Create files with diffrent combination # of ugo permission #!/bin/bash mkdir test-dir-perm if [[ \" $? \" ! = 0 ]] ; then echo \"Folder already exists\" exit 0 fi for uperm in { 0 ..7 } ; do for gperm in { 0 ..7 } ; do for operm in { 0 ..7 } ; do touch file $uperm$gperm$operm ; chmod $uperm$gperm$operm file $uperm$gperm$operm ; done done done find . -perm 646 This will do an exact match. So will only ouput the file with permission 646. i.e file646 . find . -perm -646 # , 'rw' for user find . -perm -u+rw,g+w,o+rw The least required permission for u is 6 so it will try to find files with = 6 or 7 for u for g = 4 5 6 7 for o = 6 7 For example it will match file656 , file647 , file767 find . -perm /600 find . -perm /646 Need Further reading","title":"Examples"},{"location":"LFCS%20Exam/Operation%20of%20Running%20Systems/cron/","text":"# Example of job definition: # .---------------- minute (0 - 59) # | .------------- hour (0 - 23) # | | .---------- day of month (1 - 31) # | | | .------- month (1 - 12) OR jan,feb,mar,apr ... # | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat # | | | | | # * * * * * user-name command to be executed Visit man 5 cron for explanation /var/spool/cron directory where cron checks for user jobs A field be specified as follows list of comma separated values 1,4,6 range of values (inclusive). 8\u201311 steps values in conjunction with range 0\u20134,8\u201312 * to indicate all Exam Tip To have something to reference at when creating taks run the following: cat /etc/crontab >> /var/spool/cron/ $USER Managing Access to crontab cron.allow and cron.deny files can be used to specify who can access crontab command. If /etc/cron.deny exists it will implicity allow users to run /etc/crontab -e and will disallow listed users. If cron.allow exists it will only allow user listed in the file and explicity disallow user not listed from running crontab -e If neither file exist only the root user is allowed to run crontab -e . cron.deny exists cron.deny does not exist cron.allow exist only user listed in cron.allow are allowed only user listed in cron.allow are allowed cron.allow does not exist user listed in cron.deny aren't allowed only root user can use crontab -e Examples */15 12 * * * logger \"doing something\" This would run it every 15 minutes starting from 12:00 o'clock (24 hour format) till 13:00. So, the task would run at 12:00 , 12:15 , 12:30 and 12:45 15 12 15 * Fri logger \"doing something\" runs the command on the 15th of every month, and every Friday at 12:15 Note When the Day of month and Day of week fields are both other than *, the command is executed when either of these two fields are satisfied. Resource Cron Checker","title":"Schedule tasks to run at a set date and time"},{"location":"LFCS%20Exam/Operation%20of%20Running%20Systems/cron/#managing-access-to-crontab","text":"cron.allow and cron.deny files can be used to specify who can access crontab command. If /etc/cron.deny exists it will implicity allow users to run /etc/crontab -e and will disallow listed users. If cron.allow exists it will only allow user listed in the file and explicity disallow user not listed from running crontab -e If neither file exist only the root user is allowed to run crontab -e . cron.deny exists cron.deny does not exist cron.allow exist only user listed in cron.allow are allowed only user listed in cron.allow are allowed cron.allow does not exist user listed in cron.deny aren't allowed only root user can use crontab -e","title":"Managing Access to crontab"},{"location":"LFCS%20Exam/Operation%20of%20Running%20Systems/cron/#examples","text":"*/15 12 * * * logger \"doing something\" This would run it every 15 minutes starting from 12:00 o'clock (24 hour format) till 13:00. So, the task would run at 12:00 , 12:15 , 12:30 and 12:45 15 12 15 * Fri logger \"doing something\" runs the command on the 15th of every month, and every Friday at 12:15 Note When the Day of month and Day of week fields are both other than *, the command is executed when either of these two fields are satisfied.","title":"Examples"},{"location":"LFCS%20Exam/Operation%20of%20Running%20Systems/cron/#resource","text":"Cron Checker","title":"Resource"},{"location":"LFCS%20Exam/Service%20Configuration/dns/","text":"DNS server can be authoritative or not. DNS serves can be Forwarding or Recursive DNS. Forwarding vs Recursive DNS Forwarding DNS forwards the request to an upstream or configured dns server. Recursive DNS Mean while will traverse the path of the domain across the Internet to deliver the answer to the question. Your recursive server will send a query to the DNS root servers: \"Who is handling .net ?\u201d The root server answers with a referral to the TLD servers for .net . Your recursive server will send a query to one of the TLD DNS servers for .net : \"Who is handling pi-hole.net ?\u201d The TLD server answers with a referral to the authoritative name servers for pi-hole.net . Your recursive server will send a query to the authoritative name servers: \u201cWhat is the IP of pi-hole.net ?\u201d The authoritative server will answer with the IP address of the domain pi-hole.net . Your recursive server will then cache answer to its request. Example taken from Pi-hole unbound setup","title":"Maintain a DNS zone"},{"location":"LFCS%20Exam/Service%20Configuration/dns/#forwarding-vs-recursive-dns","text":"","title":"Forwarding vs Recursive DNS"},{"location":"LFCS%20Exam/Service%20Configuration/dns/#forwarding-dns","text":"forwards the request to an upstream or configured dns server.","title":"Forwarding DNS"},{"location":"LFCS%20Exam/Service%20Configuration/dns/#recursive-dns","text":"Mean while will traverse the path of the domain across the Internet to deliver the answer to the question. Your recursive server will send a query to the DNS root servers: \"Who is handling .net ?\u201d The root server answers with a referral to the TLD servers for .net . Your recursive server will send a query to one of the TLD DNS servers for .net : \"Who is handling pi-hole.net ?\u201d The TLD server answers with a referral to the authoritative name servers for pi-hole.net . Your recursive server will send a query to the authoritative name servers: \u201cWhat is the IP of pi-hole.net ?\u201d The authoritative server will answer with the IP address of the domain pi-hole.net . Your recursive server will then cache answer to its request. Example taken from Pi-hole unbound setup","title":"Recursive DNS"},{"location":"LFCS%20Exam/Storage%20Management/configurefs/","text":"Mounting Partitions persistently TODO using uuid,label and path Setting up partition label What is the use of setting partition label? We can set part label using e2label or tune2fs commands or set label name during filesystem setup with the -L option Note : e2label and tune2fs can only create label on partiton formatted as ext2,ext3 or ext4. ntfslabel command can be used to setup label for ntfs filesystem. mkswap can be used to set up swap space label Set label e2label /dev/sdb1 LABEL tune2fs -L salesDocuments /dev/sdb2 mkfs.ext4 -L backup /dev/sdb3 mkswap -L swapLabel DEV|FILE To remove a label from a partition pass an empty string. e2label /dev/sdb5 \"\" Check label Using lsblk $ lsblk --fs ... sdb \u251c\u2500sdb1 ext4 backup 117ec561-ef19-45dd-9fd3-430c7d88ff39 \u251c\u2500sdb2 ext4 salesDocuments a13c5f92-276a-400c-847d-4a86b7f5a9d6 \u251c\u2500sdb3 ext4 backup c04002a7-5b10-400b-8325-fc13e5042575 \u2514\u2500sdb4 xfs 116972a1-cd40-413d-ab2f-8f9e9b6aaf9b Using e2label command $ e2label /dev/sdb1 backup Mount using partition label Replace device name with LABEL=label . LABEL=salesDocuments /sales ext4 defaults 0 0","title":"Create and configure file systems"},{"location":"LFCS%20Exam/Storage%20Management/configurefs/#mounting-partitions-persistently","text":"TODO using uuid,label and path","title":"Mounting Partitions persistently"},{"location":"LFCS%20Exam/Storage%20Management/configurefs/#setting-up-partition-label","text":"What is the use of setting partition label? We can set part label using e2label or tune2fs commands or set label name during filesystem setup with the -L option Note : e2label and tune2fs can only create label on partiton formatted as ext2,ext3 or ext4. ntfslabel command can be used to setup label for ntfs filesystem. mkswap can be used to set up swap space label","title":"Setting up partition label"},{"location":"LFCS%20Exam/Storage%20Management/configurefs/#set-label","text":"e2label /dev/sdb1 LABEL tune2fs -L salesDocuments /dev/sdb2 mkfs.ext4 -L backup /dev/sdb3 mkswap -L swapLabel DEV|FILE To remove a label from a partition pass an empty string. e2label /dev/sdb5 \"\"","title":"Set label"},{"location":"LFCS%20Exam/Storage%20Management/configurefs/#check-label","text":"Using lsblk $ lsblk --fs ... sdb \u251c\u2500sdb1 ext4 backup 117ec561-ef19-45dd-9fd3-430c7d88ff39 \u251c\u2500sdb2 ext4 salesDocuments a13c5f92-276a-400c-847d-4a86b7f5a9d6 \u251c\u2500sdb3 ext4 backup c04002a7-5b10-400b-8325-fc13e5042575 \u2514\u2500sdb4 xfs 116972a1-cd40-413d-ab2f-8f9e9b6aaf9b Using e2label command $ e2label /dev/sdb1 backup","title":"Check label"},{"location":"LFCS%20Exam/Storage%20Management/configurefs/#mount-using-partition-label","text":"Replace device name with LABEL=label . LABEL=salesDocuments /sales ext4 defaults 0 0","title":"Mount using partition label"},{"location":"LFCS%20Exam/Storage%20Management/quota/","text":"disk quota managed through the quota* command. Make sure to have it installed it and that the kernel supports this feature. remount the partition using usrquota,grpquota option. Edit /etc/fstab to mount partition using the following option during boot. Steps in defining disk quota Enable(add) quota option when mounting. Edit /etc/fstab for persistence. Use the following mount options - For user quota : `usrquota`, `uquota` - For group quota : `grpquota`, `gquota` - For project quota : `pquota`. (before using this option make sure the file system you are using supports project quota) Create a quota file. It contains quota usage information for a specific file system. $ quotacheck -cugmva -c Don't read existing quota files. Just perform a new scan and save it to disk. This option will a quota file for keeping track of usage. -m Don't try to remount file system read-only -u , -g option indicate user and group quota should be created. Alternatively you can create the quota file for the partition you want instead of creating for all the partitions in fstab mounted that have quota option. quotacheck -cum /dev/sda1 Switch quota on using quotaon command on the partition. quotaon /dev/sdad1 quotaon -p /dev/sda1 # check status Edit userquota using edquota command $ edquota -u tux to edit grace period $ edquota -t User quota can be modified or changed using setquota command $ setquota -u tux 70M 80M 0 0 /dev/sdb1 Setting quota on xfs file system xfs has better quota management tools. xfs_quota is the command mount options are similar to ext file system. For user quota we can either user usrquota or uquota , for group quota we can either use grpquota or gquota . We also have options like uqnoenforce and gqnoenforce . pquota . There are two modes,both can run in interactive mode Simple mode Expert mode To view quota $ xfs_quota -xc \"report\" DEV To set block quota limit of (30M,35M) for user tux on /dev/sdb4 $ xfs_quota -xc \"limit -u bsoft=30M bhard=35M tux\" /dev/sdb4 no need to run quotacheck on the disk when using xfs file system. Checking quota (allocation) repquota -uv /dev/sda1 Summary Run command (quotacheck, setquota, repquota) without arguments to get help. Generate a general quota report on the system using repquota -av command edit user and group disk quota Display/check a user's quota requota by default ignores user without usage The quotacheck command has no effect on XFS file systems. $ quota -u tux","title":"Setting Disk quota"},{"location":"LFCS%20Exam/Storage%20Management/quota/#steps-in-defining-disk-quota","text":"Enable(add) quota option when mounting. Edit /etc/fstab for persistence. Use the following mount options - For user quota : `usrquota`, `uquota` - For group quota : `grpquota`, `gquota` - For project quota : `pquota`. (before using this option make sure the file system you are using supports project quota) Create a quota file. It contains quota usage information for a specific file system. $ quotacheck -cugmva -c Don't read existing quota files. Just perform a new scan and save it to disk. This option will a quota file for keeping track of usage. -m Don't try to remount file system read-only -u , -g option indicate user and group quota should be created. Alternatively you can create the quota file for the partition you want instead of creating for all the partitions in fstab mounted that have quota option. quotacheck -cum /dev/sda1 Switch quota on using quotaon command on the partition. quotaon /dev/sdad1 quotaon -p /dev/sda1 # check status Edit userquota using edquota command $ edquota -u tux to edit grace period $ edquota -t User quota can be modified or changed using setquota command $ setquota -u tux 70M 80M 0 0 /dev/sdb1","title":"Steps in defining disk quota"},{"location":"LFCS%20Exam/Storage%20Management/quota/#setting-quota-on-xfs-file-system","text":"xfs has better quota management tools. xfs_quota is the command mount options are similar to ext file system. For user quota we can either user usrquota or uquota , for group quota we can either use grpquota or gquota . We also have options like uqnoenforce and gqnoenforce . pquota . There are two modes,both can run in interactive mode Simple mode Expert mode To view quota $ xfs_quota -xc \"report\" DEV To set block quota limit of (30M,35M) for user tux on /dev/sdb4 $ xfs_quota -xc \"limit -u bsoft=30M bhard=35M tux\" /dev/sdb4 no need to run quotacheck on the disk when using xfs file system.","title":"Setting quota on xfs file system"},{"location":"LFCS%20Exam/Storage%20Management/quota/#checking-quota-allocation","text":"repquota -uv /dev/sda1","title":"Checking  quota (allocation)"},{"location":"LFCS%20Exam/Storage%20Management/quota/#summary","text":"Run command (quotacheck, setquota, repquota) without arguments to get help. Generate a general quota report on the system using repquota -av command edit user and group disk quota Display/check a user's quota requota by default ignores user without usage The quotacheck command has no effect on XFS file systems. $ quota -u tux","title":"Summary"},{"location":"LFCS%20Exam/Storage%20Management/raid/","text":"RAID Redundant Array of Independent Disks A glance at what RAID is. /RAID is not a backup RAID Levels LEVEL 0 1 5 6 . striping mirroring parity striping double parity Min. disk required 2 2 3 4 RAID 5 supports a single disk failure. RAID 6 supports upto 2 disk failures. yum install mdadm General structure of mdadm command, mdadm [mode] <raiddevice> [options] <component-devices> if no mode is specified it will default to --manage . Note RAID device comes before component devices. Managing RAID Array Info I will be referring to the RAID array as /dev/md0 . All commands are run as root user Create Create level 0 RAID with 2 active devices and 1 spare mdadm --create /dev/md0 --level=0 --raid-devices=2 \\ /dev/sdb1 /dev/sdb2 --spare=1 /dev/sdb3 Note We explicitly specify the number of disks that are going to be used in our array Create level 5 RAID with 3 active devices mdadm --create /dev/md0 --level=5 --raid-devices=3 \\ /dev/sdb1 /dev/sdb2 /dev/sdb3 Finally create a filesystem mkfs.ext4 /dev/md0 Check Status mdadm --detail /dev/md0 cat /proc/mdstat Automounting RAID array at boot First save the configuration to /etc/mdadm.conf mdadm --detail --scan >> /etc/mdadm.conf Then add an entry in /etc/fstab # RAID /dev/md0 /mnt/shared ext4 defaults 0 0 To read array info from mdadm.conf mdadm --assemble --scan Removing RAID array Make sure the drive is unmounted, then umount /dev/md0 mdam --stop /dev/md0 Then remove entries for the array from /etc/mdadm.conf and /etc/fstab . There are other steps involved, but that is out of the scope of the LFCS exam. More operations Mark a disk faulty madam /dev/md0 --fail /dev/sdb1 Remove disk from array ( should not be active) mdadm /dev/md0 --remove /dev/sdb1 Add spare to array mdadm /dev/md0 --add /dev/sdb2 Grow RAID ARRAY: mdadm --add /dev/md0 /dev/sdb2 mdadm --grow /dev/md0 --raid-devices=4 Shortcut discussed Vim shortcut we discussed : : set nu or : set number to show line number LINE + G or : LINE to jump to LINE $ to move to end of line gg to move to the end of a file G to move to the start of a file","title":"Create and manage RAID devices"},{"location":"LFCS%20Exam/Storage%20Management/raid/#raid","text":"Redundant Array of Independent Disks A glance at what RAID is. /RAID is not a backup","title":"RAID"},{"location":"LFCS%20Exam/Storage%20Management/raid/#raid-levels","text":"LEVEL 0 1 5 6 . striping mirroring parity striping double parity Min. disk required 2 2 3 4 RAID 5 supports a single disk failure. RAID 6 supports upto 2 disk failures. yum install mdadm General structure of mdadm command, mdadm [mode] <raiddevice> [options] <component-devices> if no mode is specified it will default to --manage . Note RAID device comes before component devices.","title":"RAID Levels"},{"location":"LFCS%20Exam/Storage%20Management/raid/#managing-raid-array","text":"Info I will be referring to the RAID array as /dev/md0 . All commands are run as root user","title":"Managing RAID Array"},{"location":"LFCS%20Exam/Storage%20Management/raid/#create","text":"Create level 0 RAID with 2 active devices and 1 spare mdadm --create /dev/md0 --level=0 --raid-devices=2 \\ /dev/sdb1 /dev/sdb2 --spare=1 /dev/sdb3 Note We explicitly specify the number of disks that are going to be used in our array Create level 5 RAID with 3 active devices mdadm --create /dev/md0 --level=5 --raid-devices=3 \\ /dev/sdb1 /dev/sdb2 /dev/sdb3 Finally create a filesystem mkfs.ext4 /dev/md0","title":"Create"},{"location":"LFCS%20Exam/Storage%20Management/raid/#check-status","text":"mdadm --detail /dev/md0 cat /proc/mdstat","title":"Check Status"},{"location":"LFCS%20Exam/Storage%20Management/raid/#automounting-raid-array-at-boot","text":"First save the configuration to /etc/mdadm.conf mdadm --detail --scan >> /etc/mdadm.conf Then add an entry in /etc/fstab # RAID /dev/md0 /mnt/shared ext4 defaults 0 0 To read array info from mdadm.conf mdadm --assemble --scan","title":"Automounting RAID array at boot"},{"location":"LFCS%20Exam/Storage%20Management/raid/#removing-raid-array","text":"Make sure the drive is unmounted, then umount /dev/md0 mdam --stop /dev/md0 Then remove entries for the array from /etc/mdadm.conf and /etc/fstab . There are other steps involved, but that is out of the scope of the LFCS exam.","title":"Removing RAID array"},{"location":"LFCS%20Exam/Storage%20Management/raid/#more-operations","text":"Mark a disk faulty madam /dev/md0 --fail /dev/sdb1 Remove disk from array ( should not be active) mdadm /dev/md0 --remove /dev/sdb1 Add spare to array mdadm /dev/md0 --add /dev/sdb2 Grow RAID ARRAY: mdadm --add /dev/md0 /dev/sdb2 mdadm --grow /dev/md0 --raid-devices=4","title":"More operations"},{"location":"LFCS%20Exam/Storage%20Management/raid/#shortcut-discussed","text":"Vim shortcut we discussed : : set nu or : set number to show line number LINE + G or : LINE to jump to LINE $ to move to end of line gg to move to the end of a file G to move to the start of a file","title":"Shortcut discussed"},{"location":"LFCS%20Exam/Storage%20Management/swap/","text":"A swap space could be a file or a partition (or both). incase of a file it needs to be allocated using fallocate or dd command. count size for a size of 1G is 1024x1024 = 1048576. file perm should be 600 $ sudo fallocate -l 1G /swapfile1 The command will allocate swapfile in / with 1Gb. $ sudo dd if=/dev/zero of=/swapfile2 bs=1024 count=1048576 $ sudo dd if=/dev/zero of=/swapfile3 bs=1G count=1 shows diffrent ways of specifying size in dd command. - bs refers to the block size. M in binary units (eg MB). suffix B and size would interms of decimal units. - count the number of iterations to [...] ### Steps in creating swap space Create the swap space Swap File create a file using fallocate or dd command Swap partition create a partition with linux swap type issue mkswap on file/partition turn swapon for file or partition ### Summary List all active swap space ( swapon --show, free, top, htop commands) Enable or disable swap space; individual or all swap space ( swapon an swapoff commands) For persistence add an entry for a the swap partition in /etc/fstab Note You might get the following error when using fallocate to allocate swao space swapon: /swapfile: swapon failed: Invalid argument . Files with holes The swap file implementation in the kernel expects to be able to write to the file directly, without the assistance of the filesystem. This is a problem on files with holes or on copy-on-write files on filesystems like Btrfs. Commands like cp(1) or truncate(1) create files with holes. These files will be rejected by swapon. Preallocated files created by fallocate(1) may be interpreted as files with holes too depending of the filesystem. Preallocated swap files are supported on XFS since Linux 4.18. The most portable solution to create a swap file is to use dd(1) and /dev/zero.","title":"Configure and manage swap space"},{"location":"LFCS%20Exam/Storage%20Management/swap/#note","text":"You might get the following error when using fallocate to allocate swao space swapon: /swapfile: swapon failed: Invalid argument . Files with holes The swap file implementation in the kernel expects to be able to write to the file directly, without the assistance of the filesystem. This is a problem on files with holes or on copy-on-write files on filesystems like Btrfs. Commands like cp(1) or truncate(1) create files with holes. These files will be rejected by swapon. Preallocated files created by fallocate(1) may be interpreted as files with holes too depending of the filesystem. Preallocated swap files are supported on XFS since Linux 4.18. The most portable solution to create a swap file is to use dd(1) and /dev/zero.","title":"Note"}]}